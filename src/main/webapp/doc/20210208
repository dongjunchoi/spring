배치(일괄처리)란?
	-연속적으로 이어져 진행되는 작업들을 하나의 작업 단위로 패키징 하여 처리하는 행위
		(주기적으로 실행되는 작업을 의미하기도 함)

. 인사 발령에 의한 보직자 변경시 결재선 자동 변경 배치
	. 기본 결재선 삭제(팀장 - 부장- 임원 - 사장)
	. 각 사원의 조직정보를 바탕으로 사원(조직)별 결재라인 계산
	. 계산된 결재선 입력(생성
. 이기종 시스템간 조직/ 인사 데이터 연도응ㄹ 위한 데이터전송 배치
	. 마스터 인사/조직 시스템 정보 조회
	. legacy 인사/조직 정보 삭제
	. legacy 시스템에 마스터 인사/조직 정보 입력
	
용어
. Job Repository : 배치 실행 정보를 저장(db/none)
. Job Launcher : 배치 실행을 담당 기반 컴포넌트
. Job : 배치 처리를 통해 실행하는 어플리케이션
. Stop : Job의 세부적 단계를 의미한다. Job은 일련의 연속된 Step으로 구성
. Tasklet : Step 내에서 실행된느 작업 단위
. Item : 특정 리소스(file, db)로부터 읽어 들여 처리하고자 하는 각 레코드(data)
. Chunk : 특정 크기를 갖는 아이템 목록, 배치처리 되는 단위
			(한건씩 매번 commit -> 여러건씩 한번에 처리 commit)
. Item Reader : 특정 리소스로부터 아이템을 읽어들이는 컴포넌트
. Item Processor : Item Reader 로 읽어 들인 아이템을 가공하는 컴포넌트
. Item Writer : Item Processor로 부터 전달받은 아이템 Chunk를 특정 리소스에 저장하는 컨포넌트
. JobInstance : Job + JobParameter(잡을 실행할 때 사용할 값)
. JobExecution : JobInstance의 실행 정보(실패 후 재실행시 새로운 JobExecution 생성)
 
 1. pom(dependency)
 2. reader, writer, processor
 
	reader => ItemReader구현
	processor => ItemProcessor 구현
	writer => ItemWriter 구현
	
K ==> Key
V ==> Value
T ==> Type

I ==> IN 
O ==> OUT

persistent ==> 영속성(db) <==> memory

scheduler
	. 특정 메소드를 주기적으로 실행
	. 설정
		. 반복적으로 실행할 클래스-메소드 구현
		. scheduler등록
		. scheduler-tasks를 통해 scheduled 등록
			. scheduler를 통해 실행할 항목, 실행 주기 설정
			
주입방법 3가지
	1. SETTER
	2. 생성자
	3. 어노테이션